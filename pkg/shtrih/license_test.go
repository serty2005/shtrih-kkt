// Файл: pkg/shtrih/license_test.go
package shtrih

import (
	"strings"
	"testing"
)

func TestDecodeLicense(t *testing.T) {
	tests := []struct {
		name     string
		input    string
		expected string
	}{
		// Тесты подписок (новые версии - читаются с позиции 16)
		{
			name:     "Подписка - 1 квартал 2020",
			input:    "FFFFFFFFFFFFFFFF010000000000000000000000000000000000000000000000",
			expected: "Подписка до 1 квартала 2020 года",
		},
		{
			name:     "Подписка - 2 квартал 2020",
			input:    "FFFFFFFFFFFFFFFF030000000000000000000000000000000000000000000000",
			expected: "Подписка до 2 квартала 2020 года",
		},
		{
			name:     "Подписка - 3 квартал 2020",
			input:    "FFFFFFFFFFFFFFFF070000000000000000000000000000000000000000000000",
			expected: "Подписка до 3 квартала 2020 года",
		},
		{
			name:     "Подписка - 4 квартал 2020",
			input:    "FFFFFFFFFFFFFFFF0F0000000000000000000000000000000000000000000000",
			expected: "Подписка до 4 квартала 2020 года",
		},
		{
			name:     "Подписка - 1 квартал 2021",
			input:    "FFFFFFFFFFFFFFFF1F0000000000000000000000000000000000000000000000",
			expected: "Подписка до 1 квартала 2021 года",
		},
		{
			name:     "Подписка - 2 квартал 2021",
			input:    "FFFFFFFFFFFFFFFF3F0000000000000000000000000000000000000000000000",
			expected: "Подписка до 2 квартала 2021 года",
		},
		{
			name:     "Подписка - 3 квартал 2021",
			input:    "FFFFFFFFFFFFFFFF7F0000000000000000000000000000000000000000000000",
			expected: "Подписка до 3 квартала 2021 года",
		},
		{
			name:     "Подписка - 4 квартал 2021",
			input:    "FFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000000000",
			expected: "Подписка до 4 квартала 2021 года",
		},
		{
			name:     "Подписка - 1 квартал 2022",
			input:    "FFFFFFFFFFFFFFFFFF0100000000000000000000000000000000000000000000",
			expected: "Подписка до 1 квартала 2022 года",
		},
		{
			name:     "Подписка - 2 квартал 2022",
			input:    "FFFFFFFFFFFFFFFFFF0300000000000000000000000000000000000000000000",
			expected: "Подписка до 2 квартала 2022 года",
		},
		{
			name:     "Подписка - 3 квартал 2022",
			input:    "FFFFFFFFFFFFFFFFFF0700000000000000000000000000000000000000000000",
			expected: "Подписка до 3 квартала 2022 года",
		},
		{
			name:     "Подписка - 4 квартал 2022",
			input:    "FFFFFFFFFFFFFFFFFF0F00000000000000000000000000000000000000000000",
			expected: "Подписка до 4 квартала 2022 года",
		},
		{
			name:     "Подписка - 1 квартал 2023",
			input:    "FFFFFFFFFFFFFFFFFF1F00000000000000000000000000000000000000000000",
			expected: "Подписка до 1 квартала 2023 года",
		},
		{
			name:     "Подписка - 2 квартал 2023",
			input:    "FFFFFFFFFFFFFFFFFF3F00000000000000000000000000000000000000000000",
			expected: "Подписка до 2 квартала 2023 года",
		},
		{
			name:     "Подписка - 3 квартал 2023",
			input:    "FFFFFFFFFFFFFFFFFF7F00000000000000000000000000000000000000000000",
			expected: "Подписка до 3 квартала 2023 года",
		},
		{
			name:     "Подписка - 4 квартал 2023",
			input:    "FFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000",
			expected: "Подписка до 4 квартала 2023 года",
		},
		{
			name:     "Подписка - 1 квартал 2024",
			input:    "FFFFFFFFFFFFFFFFFFFF01000000000000000000000000000000000000000000",
			expected: "Подписка до 1 квартала 2024 года",
		},
		{
			name:     "Подписка - 2 квартал 2024",
			input:    "FFFFFFFFFFFFFFFFFFFF03000000000000000000000000000000000000000000",
			expected: "Подписка до 2 квартала 2024 года",
		},
		{
			name:     "Подписка - 3 квартал 2024",
			input:    "FFFFFFFFFFFFFFFFFFFF07000000000000000000000000000000000000000000",
			expected: "Подписка до 3 квартала 2024 года",
		},
		{
			name:     "Подписка - 4 квартал 2024",
			input:    "FFFFFFFFFFFFFFFFFFFF0F000000000000000000000000000000000000000000",
			expected: "Подписка до 4 квартала 2024 года",
		},
		{
			name:     "Подписка - 1 квартал 2025",
			input:    "0000000000000000FFFF1F00000000000000000000000000000000000000000000",
			expected: "Подписка до 1 квартала 2025 года",
		},
		{
			name:     "Подписка - 2 квартал 2025",
			input:    "0000000000000000FFFF3F00000000000000000000000000000000000000000000",
			expected: "Подписка до 2 квартала 2025 года",
		},
		{
			name:     "Подписка - 3 квартал 2025",
			input:    "0000000000000000FFFF7F00000000000000000000000000000000000000000000",
			expected: "Подписка до 3 квартала 2025 года",
		},
		{
			name:     "Подписка - 4 квартал 2025",
			input:    "0000000000000000FFFFFF00000000000000000000000000000000000000000000",
			expected: "Подписка до 4 квартала 2025 года",
		},
		{
			name:     "Подписка - 1 квартал 2026",
			input:    "0000000000000000FFFFFF01000000000000000000000000000000000000000000",
			expected: "Подписка до 1 квартала 2026 года",
		},
		{
			name:     "Подписка - 2 квартал 2026",
			input:    "0000000000000000FFFFFF03000000000000000000000000000000000000000000",
			expected: "Подписка до 2 квартала 2026 года",
		},
		{
			name:     "Подписка - 3 квартал 2026",
			input:    "0000000000000000FFFFFF07000000000000000000000000000000000000000000",
			expected: "Подписка до 3 квартала 2026 года",
		},
		{
			name:     "Подписка - 4 квартал 2026",
			input:    "0000000000000000FFFFFF0F000000000000000000000000000000000000000000",
			expected: "Подписка до 4 квартала 2026 года",
		},
		{
			name:     "Подписка - 1 квартал 2027",
			input:    "0000000000000000FFFFFF1F000000000000000000000000000000000000000000",
			expected: "Подписка до 1 квартала 2027 года",
		},
		{
			name:     "Подписка - 2 квартал 2027",
			input:    "0000000000000000FFFFFF3F000000000000000000000000000000000000000000",
			expected: "Подписка до 2 квартала 2027 года",
		},
		{
			name:     "Подписка - 3 квартал 2027",
			input:    "0000000000000000FFFFFF7F000000000000000000000000000000000000000000",
			expected: "Подписка до 3 квартала 2027 года",
		},
		{
			name:     "Подписка - 4 квартал 2027",
			input:    "0000000000000000FFFFFFFF000000000000000000000000000000000000000000",
			expected: "Подписка до 4 квартала 2027 года",
		},

		// Тесты на некорректные данные
		{
			name:     "Пустая строка",
			input:    "",
			expected: "",
		},
		{
			name:     "Некорректная лицензия",
			input:    "ABCDEF1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF1234567890",
			expected: "",
		},
		{
			name:     "Слишком короткая строка",
			input:    "ABCDEF1234567890",
			expected: "",
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			result := decodeLicense(tt.input)
			if result != tt.expected {
				t.Errorf("decodeLicense(%q) = %q, ожидается %q", tt.input, result, tt.expected)
			}
		})
	}
}

// Тест проверяет правильность чтения с позиции 16 знаков
func TestDecodeLicensePosition16(t *testing.T) {
	// Тест показывает, что старый код (с strings.Contains) может найти неправильное совпадение
	// в то время как новый код читает строго с позиции 16

	// Строка, где "FF00" встречается и в начале, и на позиции 16
	input := "AAAAAAAAAAAAAAAAFF000000000000000000000000000000000000000000"

	// С позиции 16: "FF0000000000000000000000000000000000000000"
	// Первые 4 символа с позиции 16: "FF00" - это подписка на 4 квартал 2021 года
	result := decodeLicense(input)
	expected := "Подписка до 4 квартала 2021 года"

	if result != expected {
		t.Errorf("decodeLicense(%q) = %q, ожидается %q (должна читаться подписка с позиции 16)", input, result, expected)
	}
}

// Benchmark тест для проверки производительности
func BenchmarkDecodeLicense(b *testing.B) {
	testData := []string{
		"FF00000000000000000000000000000000",
		"FFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000000000",
		"FFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000",
	}

	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		for _, data := range testData {
			_ = decodeLicense(data)
		}
	}
}

// Проверка case-insensitive обработки
func TestDecodeLicenseCaseInsensitive(t *testing.T) {
	tests := []struct {
		name     string
		input    string
		expected string
	}{
		{
			name:     "Нижний регистр",
			input:    strings.ToLower("FFFFFFFFFFFFFFFFFF01") + strings.Repeat("0", 56),
			expected: "Подписка до 1 квартала 2022 года",
		},
		{
			name:     "Смешанный регистр",
			input:    "ffFfFfFfFfFfFfFfFf01" + strings.Repeat("0", 56),
			expected: "Подписка до 1 квартала 2022 года",
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			result := decodeLicense(tt.input)
			if result != tt.expected {
				t.Errorf("decodeLicense(%q) = %q, ожидается %q", tt.input, result, tt.expected)
			}
		})
	}
}
